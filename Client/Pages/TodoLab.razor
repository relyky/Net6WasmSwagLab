@page "/todo"
@inject SwagClient.TodoApi bizApi

<PageTitle>Todo list</PageTitle>

<h1>Todo list</h1>

<p>實作簡單的 Todo 清單。(未完待續…)</p>

<div class="d-flex align-items-center gap-3">
  <button class="btn btn-primary" @onclick=HandleQuery>刷新</button>
  <div class="form-check">
    <label class="form-check-label">
      <input class="form-check-input" type="checkbox" @bind-value=@f_testFail>
      測試邏輯失敗
    </label>
  </div>
</div>

@if (!String.IsNullOrWhiteSpace(errMsg))
{
  <div class="alert alert-danger">
    @errMsg
  </div>
}

@if (todoList == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <table class="table">
    <thead>
      <tr>
        <th>Sn</th>
        <th>Description</th>
        <th>Done</th>
        <th>CreateDtm</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var item in todoList)
      {
        <tr>
          <td>@item.Sn</td>
          <td>@item.Description</td>
          <td>@item.Done</td>
          <td>@item.CreateDtm</td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  List<TodoDto>? todoList = null;
  string errMsg = string.Empty;
  bool f_testFail = false;

  protected override async Task OnInitializedAsync()
  {
    await HandleQuery();
  }

  async Task HandleQuery()
  {
    try
    {
      errMsg = string.Empty;
      todoList = null;

      var args = new TodoQryAgs {
        Msg = f_testFail ? "測試邏輯失敗" : "今天天氣真好",
        Amt = 999
      };

      todoList = await bizApi.QryDataListAsync(args);
    }
    catch (SwagClient.ApiException<ErrMsg> ex)
    {
      // 邏輯失敗!
      errMsg = $"ApiException: {ex.Result.Severity}-{ex.Result.Message}";
    }
    catch (Exception ex)
    {
      // 例外失敗!
      errMsg = "EXCEPTION: " + ex.Message;
    }
  }
}
